@model TaskPilot.Web.ViewModels.ImportTaskViewModel

@{
    ViewBag.Title = "Import Task";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div class="container d-flex justify-content-center align-items-center">
    <div class="card shadow-lg p-2" style="background: rgba(255, 255, 255, 0.2); border-radius: 16px; box-shadow: 0 4px 30px rgba(0, 0, 0, 0.1); backdrop-filter: blur(5px); -webkit-backdrop-filter: blur(5px); border: 1px solid rgba(255, 255, 255, 0.3); width:100vh;">
        <nav aria-label="breadcrumb" class="ps-2">
            <ol class="breadcrumb">
                <li class="breadcrumb-item"><a href="@Url.Action("Index", "Task")">Task Management</a></li>
                <li class="breadcrumb-item active" aria-current="page">Import Task</li>
            </ol>
        </nav>
        <div class="card-header" style="border-radius: 16px">
            <form asp-action="ImportTask" asp-controller="Task" method="Post" enctype="multipart/form-data">

                <div class="mb-3">
                    <label for="formFile" class="form-label">Upload CSV File Here</label>
                    <input asp-for="File" type="file" class="form-control" name="formFile" />
                    <span asp-validation-for="File"></span>
                    <button type="submit" class="btn btn-success btn-sm float-end">Upload</button>
                </div>
            </form>
        </div>
        <div class="card-body px-4 py-3">
            <div class="row">
                <hr />
            </div>
            @if (Model.ImportInfo.Count > 0)
            {
                <form asp-action="SyncToDB" asp-controller="Task" method="post">
                    <div class="table-wrapper table-responsive overflow-auto" style="max-height: 350px;">
                        <table class="table caption-top text-center" id="example" style="width:1500px">
                            <caption class="fw-bold">Data Retrieved From CSV</caption>
                            <thead>
                                <tr>
                                    <th>Task</th>
                                    <th>Description</th>
                                    <th>Due Date</th>
                                    <th>Priority Level</th>
                                    <th>Status</th>
                                    <th>Assignee</th>
                                </tr>
                            </thead>
                            <tbody>

                                @for (int i = 0; i < Model.ImportInfo.Count; i++)
                                {
                                    <tr>
                                        <td>
                                            <input type="text" asp-for="ImportInfo[i].Name" class="form-control"/>
                                            <span asp-validation-for="ImportInfo[i].Name"></span>
                                        </td>
                                        <td>
                                            <input type="text" asp-for="ImportInfo[i].Description" class="form-control" />
                                            <span asp-validation-for="ImportInfo[i].Description"></span>

                                        </td>
                                        <td>
                                            <input type="date" asp-for="ImportInfo[i].DueDate" class="form-control" value="@(Model.ImportInfo[i].DueDate.HasValue ? Model.ImportInfo[i].DueDate.Value.ToString("yyyy-MM-dd") : DateTime.Today.ToString("yyyy-MM-dd"))" min="@DateTime.Today.ToString("yyyy-MM-dd")"/>
                                            <span asp-validation-for="ImportInfo[i].DueDate"></span>
                                        </td>
                                        <td>
                                            <select class="form-control" asp-for="ImportInfo[i].PriorityId" asp-items="@(new SelectList(Model.ImportInfo[i].PriorityList, "Id", "Description"))"></select>
                                            <span asp-validation-for="ImportInfo[i].PriorityId"></span>
                                        </td>

                                        <td>
                                            <select class="form-control" asp-for="ImportInfo[i].StatusId" asp-items="@(new SelectList(Model.ImportInfo[i].StatusList, "Id", "Description"))"></select>
                                            <span asp-validation-for="ImportInfo[i].StatusId"></span>
                                        </td>
                                        <td>
                                            <select class="form-control" asp-for="ImportInfo[i].UserId" asp-items="@(new SelectList(Model.ImportInfo[i].AssigeeList, "Id", "UserName"))"></select>
                                            <span asp-validation-for="ImportInfo[i].UserId"></span>
                                        </td>
                                    </tr>
                                }
                            </tbody>
                        </table>
                    </div>

                    @for (int i = 0; i < Model.ImportInfo.Count; i++)
                    {
                        <input type="hidden" asp-for="ImportInfo[i].Name" />
                        <input type="hidden" asp-for="ImportInfo[i].Description" />
                        <input type="hidden" asp-for="ImportInfo[i].DueDate" />
                        <input type="hidden" asp-for="ImportInfo[i].PriorityLevel" />
                        <input type="hidden" asp-for="ImportInfo[i].Status" />
                        <input type="hidden" asp-for="ImportInfo[i].AssignToUser" />
                    }
                    <br />
                    <button type="submit" class="btn btn-primary btn-sm float-end">Import</button>
                </form>
            }
        </div>
    </div>
</div>

@section Scripts {
}