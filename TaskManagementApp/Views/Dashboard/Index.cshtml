@model TaskManagementApp.ViewModels.DashboardViewModel
@{
    ViewBag.Title = "Dashboard";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<!--  Header Start -->
<!--  Header End -->
<div class="container-fluid">
    <!--  Row 1 -->
    <div class="row">
        <div class="col-lg-8 d-flex align-items-strech">
            <div class="card w-100">
                <div class="card-body">
                    <div class="d-sm-flex d-block align-items-center justify-content-between mb-9">
                        <div class="mb-3 mb-sm-0">
                            <h5 class="card-title fw-semibold">Tasks Overview</h5>
                        </div>
                    </div>
                    @*<div id="chart"></div>*@
                </div>
            </div>
        </div>
        <div class="col-lg-4">
            <div class="row">
                <div class="col-lg-12">
                    <!-- Yearly Breakup -->
                    <div class="card overflow-hidden">
                        <div class="card-body p-4">
                            <h5 class="card-title mb-9 fw-semibold"><i class="bi bi-calendar"></i> Due Reminder</h5>
                            <div class="row align-items-center">
                                <div class="col-8">
                                    @if (Model.OverDueTask != null)
                                    {
                                        <h4 class="fw-semibold mb-3"><a href="@Url.Action("Detail", "Task", new { Id = @Model.OverDueTask.Id })"> #@Model.OverDueTask.Name</a></h4>
                                        <div class="d-flex align-items-center mb-3">
                                            <span class="me-1 rounded-circle bg-danger round-20 d-flex align-items-center justify-content-center">
                                                <i class="ti ti-arrow-up-left text-success"></i>
                                            </span>
                                            @if (Model.dayLeftDue > 0)
                                            {
                                                <p class="text-dark me-1 fs-3 mb-0">Due In @Model.dayLeftDue Days</p>
                                            }
                                            else
                                            {
                                                <p class="text-dark me-1 fs-3 mb-0">Due Today</p>
                                            }
                                        </div>
                                    }
                                    else
                                    {
                                        <h4 class="fw-semibold mb-3">Task Overdue - </h4>
                                        <div class="d-flex align-items-center mb-3">
                                            <span class="me-1 rounded-circle bg-danger round-20 d-flex align-items-center justify-content-center">
                                                <i class="ti ti-arrow-up-left text-success"></i>
                                            </span>
                                            <p class="text-dark me-1 fs-3 mb-0">No Due</p>
                                        </div>
                                    }
                                </div>
                                <div class="col-4">
                                    <div class="d-flex justify-content-center">
                                        <div id="breakup"></div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <div class="row">
        <div class="d-flex align-items-stretch">
            <div class="card w-100">
                <div class="card-body p-4">
                    <h5 class="card-title fw-semibold mb-4">Recent Assigned Tasks</h5>
                    <div class="table-responsive">
                        <table class="table text-nowrap mb-0 align-middle table-hover">
                            <thead class="text-dark fs-4">
                                <tr>
                                    <th class="border-bottom-0">
                                        <h6 class="fw-semibold mb-0">#</h6>
                                    </th>
                                    <th class="border-bottom-0">
                                        <h6 class="fw-semibold mb-0">Reporter</h6>
                                    </th>
                                    <th class="border-bottom-0">
                                        <h6 class="fw-semibold mb-0">Assignee</h6>
                                    </th>
                                    <th class="border-bottom-0">
                                        <h6 class="fw-semibold mb-0">Title</h6>
                                    </th>
                                    <th class="border-bottom-0">
                                        <h6 class="fw-semibold mb-0">Priority</h6>
                                    </th>
                                    <th class="border-bottom-0">
                                        <h6 class="fw-semibold mb-0">Status</h6>
                                    </th>
                                    <th class="border-bottom-0">
                                        <h6 class="fw-semibold mb-0">Due On</h6>
                                    </th>
                                    <th class="border-bottom-0">
                                        <h6 class="fw-semibold mb-0">Created On</h6>
                                    </th>
                                </tr>
                            </thead>
                            <tbody>
                                @{var i = 0; }
                                @foreach (var task in Model.UserTaskList)
                                {
                                    i++;
                                    var priorityString = string.Empty;
                                    switch (task.Priority)
                                    {
                                        case "High":
                                            priorityString = "badge rounded-pill bg-danger";
                                            break;
                                        case "Medium":
                                            priorityString = "badge rounded-pill bg-warning text-dark";
                                            break;
                                        case "Low":
                                            priorityString = "badge rounded-pill bg-success";
                                            break;
                                        case "Lowest":
                                            priorityString = "badge bg-light text-dark";
                                            break;
                                    }

                                    var statusString = string.Empty;
                                    switch (task.Status)
                                    {
                                        case "New":
                                            statusString = "badge rounded-pill bg-primary";
                                            break;
                                        case "In-Progress":
                                            statusString = "badge rounded-pill bg-warning text-dark";
                                            break;
                                        case "Resolved":
                                            statusString = "badge rounded-pill bg-success";
                                            break;
                                        case "Closed":
                                            statusString = "badge rounded-pill bg-secondary";
                                            break;
                                        case "Removed":
                                            statusString = "badge rounded-pill bg-danger";
                                            break;
                                    }

                                    <tr>
                                        <td class="border-bottom-0"><h6 class="fw-semibold mb-0">@i</h6></td>
                                        <td class="border-bottom-0">
                                            <h6 class="fw-semibold mb-1">@task.AssignFrom</h6>
                                            <span class="fw-normal">@task.AssignFromRole</span>
                                        </td>
                                        <td class="border-bottom-0">
                                            <p class="mb-0 fw-normal">@task.AssignTo</p>
                                        </td>
                                        <td class="border-bottom-0">
                                            <p class="mb-0 fw-normal">@task.Name</p>
                                        </td>
                                        <td class="border-bottom-0">
                                            <span class="@priorityString">@task.Priority</span>
                                        </td>
                                        <td class="border-bottom-0">
                                            <span class="@statusString">@task.Status</span>
                                        </td>
                                        <td class="border-bottom-0">
                                            <h6 class="mb-0 fw-normal">@task.DueDate.Value.ToString("M")</h6>
                                        </td>
                                        <td class="border-bottom-0">
                                            <h6 class="mb-0 fw-normal">@task.CreatedDate.ToString("M")</h6>
                                        </td>
                                    </tr>
                                }
                            </tbody>
                        </table>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<script src="https://cdn.jsdelivr.net/npm/apexcharts"></script>
@section Scripts
{

    <script>
        var options = {
            chart: {
                type: 'line'
            },
            series: [{
                name: 'sales',
                data: [30, 40, 35, 50, 49, 60, 70, 91, 125]
            }],
            xaxis: {
                categories: [1991, 1992, 1993, 1994, 1995, 1996, 1997, 1998, 1999]
            }
        }

        var chart = new ApexCharts(document.querySelector("#chart"), options);

        chart.render();
    </script>

}